{
  "_args": [
    [
      {
        "raw": "object-hash@^2.0.1",
        "scope": null,
        "escapedName": "object-hash",
        "name": "object-hash",
        "rawSpec": "^2.0.1",
        "spec": ">=2.0.1 <3.0.0",
        "type": "range"
      },
      "G:\\projects\\infnews\\node_modules\\eslint-loader"
    ]
  ],
  "_from": "object-hash@^2.0.1",
  "_hasShrinkwrap": false,
  "_id": "object-hash@2.0.3",
  "_location": "/object-hash",
  "_nodeVersion": "14.0.0-pre",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/object-hash_2.0.3_1581975225063_0.6729135052610222"
  },
  "_npmUser": {
    "name": "addaleax",
    "email": "anna@addaleax.net"
  },
  "_npmVersion": "6.13.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "object-hash@^2.0.1",
    "scope": null,
    "escapedName": "object-hash",
    "name": "object-hash",
    "rawSpec": "^2.0.1",
    "spec": ">=2.0.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/eslint-loader"
  ],
  "_resolved": "https://registry.npmjs.org/object-hash/-/object-hash-2.0.3.tgz",
  "_shasum": "d12db044e03cd2ca3d77c0570d87225b02e1e6ea",
  "_shrinkwrap": null,
  "_spec": "object-hash@^2.0.1",
  "_where": "G:\\projects\\infnews\\node_modules\\eslint-loader",
  "author": {
    "name": "Scott Puleo",
    "email": "puleos@gmail.com"
  },
  "browser": "./dist/object_hash.js",
  "bugs": {
    "url": "https://github.com/puleos/object-hash/issues"
  },
  "dependencies": {},
  "description": "Generate hashes from javascript objects in node and the browser.",
  "devDependencies": {
    "browserify": "^16.2.3",
    "gulp": "^4.0.0",
    "gulp-browserify": "^0.5.1",
    "gulp-coveralls": "^0.1.4",
    "gulp-exec": "^3.0.1",
    "gulp-istanbul": "^1.1.3",
    "gulp-jshint": "^2.0.0",
    "gulp-mocha": "^5.0.0",
    "gulp-rename": "^1.2.0",
    "gulp-replace": "^1.0.0",
    "gulp-uglify": "^3.0.0",
    "jshint": "^2.8.0",
    "jshint-stylish": "^2.1.0",
    "karma": "^4.2.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-mocha": "^1.3.0",
    "mocha": "^6.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-JPKn0GMu+Fa3zt3Bmr66JhokJU5BaNBIh4ZeTlaCBzrBsOeXzwcKKAK1tbLiPKgvwmPXsDvvLHoWh5Bm7ofIYg==",
    "shasum": "d12db044e03cd2ca3d77c0570d87225b02e1e6ea",
    "tarball": "https://registry.npmjs.org/object-hash/-/object-hash-2.0.3.tgz",
    "fileCount": 5,
    "unpackedSize": 58661,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeSwa5CRA9TVsSAnZWagAADxgP/1dtIuz+8ZqbSFRUrrre\nuGON1rUpjU61VL9ebkD4Yx3Fm6RQMSEw2OMiaw4KVgAM5MxUxQMHhQg+rVy4\nV5iNmBP64y6V9XOvhtnSdhXSlbWlSOMkFi1cEdAm7Qet5DYi8uGI7xveXrBr\npRfS8dRZdI773Gsr21Il1uTmYM69qCTGAU1AcR2aatsAg7Y3jwcNl05dmD4Z\nD9dchY+olomlnNM3FCJvPs5jRsNFIokveYxptlmeqQOKoh1OcvH0f2X5F0UJ\ncl46tAYx+vZm/zR8ET39tLwwHsX/Gul3p78zcOQEeVTRRXwDERNY3IlN7ihb\nGfHh+bTP4XiyeeCF140ywcBDRkRtyfHK2+sktC6PWNm/ggMMgAZhORkDJohk\nWnxuY24uq9SLkXHNW7K8S7vCw1bQLpPkzIeTLQY6HBNxsTuLnHBv7dMoEVLa\nAlN5CjWQgCHsr0hFmsQAymG3bjltGs17e067hBuJ1Fk88ByRSlQzfNUt1U0q\nctX/CSbCaQg0HnWFKh5My/Zw37FoJCWbbjrjXE3ebSpKuEamg0/ekZlzMOmL\njRIIebhh8RiOIPKvbHnk7UZYWTQmIOxYjgmqh0PvxTELWSQcFodTK7hsyMC1\n/790s5JdOHRit9F0CYPnGhehzu13XrMe2zaBB+dVIUPw+hAZj+V3+yRTASiN\nGghD\r\n=WLDD\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6"
  },
  "files": [
    "index.js",
    "dist/object_hash.js"
  ],
  "gitHead": "7a410c7c3aadf387bfa08d919f6bb9faa565e8fe",
  "homepage": "https://github.com/puleos/object-hash",
  "keywords": [
    "object",
    "hash",
    "sha1",
    "md5"
  ],
  "license": "MIT",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "addaleax",
      "email": "anna@addaleax.net"
    },
    {
      "name": "puleos",
      "email": "puleos@gmail.com"
    }
  ],
  "name": "object-hash",
  "optionalDependencies": {},
  "readme": "# object-hash\n\nGenerate hashes from objects and values in node and the browser.  Uses node.js\ncrypto module for hashing.  Supports SHA1 and many others (depending on the platform)\nas well as custom streams (e.g. CRC32).\n\n[![NPM](https://nodei.co/npm/object-hash.png?downloads=true&downloadRank=true)](https://www.npmjs.com/package/object-hash)\n\n[![Travis CI](https://secure.travis-ci.org/puleos/object-hash.png?branch=master)](https://secure.travis-ci.org/puleos/object-hash?branch=master)\n[![Coverage Status](https://coveralls.io/repos/puleos/object-hash/badge.svg?branch=master&service=github)](https://coveralls.io/github/puleos/object-hash?branch=master)\n\n* Hash values of any type.\n* Supports a keys only option for grouping similar objects with different values.\n\n```js\nvar hash = require('object-hash');\n\nhash({foo: 'bar'}) // => '67b69634f9880a282c14a0f0cb7ba20cf5d677e9'\nhash([1, 2, 2.718, 3.14159]) // => '136b9b88375971dff9f1af09d7356e3e04281951'\n```\n\n## Versioning Disclaimer\n\nStarting with version `1.1.8` (released April 2017), new versions will consider\nthe exact returned hash part of the API contract, i.e. changes that will affect\nhash values will be considered `semver-major`. Previous versions may violate\nthat expectation.\n\nFor more information, see [this discussion](https://github.com/puleos/object-hash/issues/30).\n\n## hash(value, options);\nGenerate a hash from any object or type.  Defaults to sha1 with hex encoding.\n*  `algorithm` hash algo to be used: 'sha1', 'md5'. default: sha1\n  *  This supports the algorithms returned by `crypto.getHashes()`. Note that the default of SHA-1 is not considered secure, and a stronger algorithm should be used if a cryptographical hash is desired.\n*  `excludeValues` {true|false} hash object keys, values ignored. default: false\n*  `encoding` hash encoding, supports 'buffer', 'hex', 'binary', 'base64'. default: hex\n*  `ignoreUnknown` {true|*false} ignore unknown object types. default: false\n*  `replacer` optional function that replaces values before hashing. default: accept all values\n*  `respectFunctionProperties` {true|false} Whether properties on functions are considered when hashing. default: true\n*  `respectFunctionNames` {true|false} consider `name` property of functions for hashing. default: true\n*  `respectType` {true|false} Whether special type attributes (`.prototype`, `.__proto__`, `.constructor`)\n   are hashed. default: true\n*  `unorderedArrays` {true|false} Sort all arrays using before hashing. Note that this affects *all* collections,\n   i.e. including typed arrays, Sets, Maps, etc. default: false\n*  `unorderedSets` {true|false} Sort `Set` and `Map` instances before hashing, i.e. make\n   `hash(new Set([1, 2])) == hash(new Set([2, 1]))` return `true`. default: true\n*  `unorderedObjects` {true|false} Sort objects before hashing, i.e. make `hash({ x: 1, y: 2 }) === hash({ y: 2, x: 1 })`. default: true\n*  `excludeKeys` optional function for exclude specific key(s) from hashing, if returns true then exclude from hash. default: include all keys\n\n## hash.sha1(value);\nHash using the sha1 algorithm.\n\nNote that SHA-1 is not considered secure, and a stronger algorithm should be used if a cryptographical hash is desired.\n\n*Sugar method, equivalent to hash(value, {algorithm: 'sha1'})*\n\n## hash.keys(value);\nHash object keys using the sha1 algorithm, values ignored.\n\n*Sugar method, equivalent to hash(value, {excludeValues: true})*\n\n## hash.MD5(value);\nHash using the md5 algorithm.\n\nNote that the MD5 is not considered secure, and a stronger algorithm should be used if a cryptographical hash is desired.\n\n*Sugar method, equivalent to hash(value, {algorithm: 'md5'})*\n\n## hash.keysMD5(value);\nHash object keys using the md5 algorithm, values ignored.\n\nNote that the MD5 is not considered secure, and a stronger algorithm should be used if a cryptographical hash is desired.\n\n*Sugar method, equivalent to hash(value, {algorithm: 'md5', excludeValues: true})*\n\n## hash.writeToStream(value, [options,] stream):\nWrite the information that would otherwise have been hashed to a stream, e.g.:\n```js\nhash.writeToStream({foo: 'bar', a: 42}, {respectType: false}, process.stdout)\n// => e.g. 'object:a:number:42foo:string:bar'\n```\n\n## Installation\n\nnode:\n```js\nnpm install object-hash\n```\n\nbrowser: */dist/object_hash.js*\n```\n<script src=\"object_hash.js\" type=\"text/javascript\"></script>\n\n<script>\n  var hash = objectHash.sha1({foo:'bar'});\n\n  console.log(hash); // e003c89cdf35cdf46d8239b4692436364b7259f9\n</script>\n```\n\n## Example usage\n```js\nvar hash = require('object-hash');\n\nvar peter = {name: 'Peter', stapler: false, friends: ['Joanna', 'Michael', 'Samir'] };\nvar michael = {name: 'Michael', stapler: false, friends: ['Peter', 'Samir'] };\nvar bob = {name: 'Bob', stapler: true, friends: [] };\n\n/***\n * sha1 hex encoding (default)\n */\nhash(peter);\n// 14fa461bf4b98155e82adc86532938553b4d33a9\nhash(michael);\n// 4b2b30e27699979ce46714253bc2213010db039c\nhash(bob);\n// 38d96106bc8ef3d8bd369b99bb6972702c9826d5\n\n/***\n * hash object keys, values ignored\n */\nhash(peter, { excludeValues: true });\n// 48f370a772c7496f6c9d2e6d92e920c87dd00a5c\nhash(michael, { excludeValues: true });\n// 48f370a772c7496f6c9d2e6d92e920c87dd00a5c\nhash.keys(bob);\n// 48f370a772c7496f6c9d2e6d92e920c87dd00a5c\n\n/***\n * hash object, ignore specific key(s)\n */\nhash(peter, { excludeKeys: function(key) {\n    if ( key === 'friends') {\n      return true;\n    }\n    return false;\n  }\n});\n// 66b7d7e64871aa9fda1bdc8e88a28df797648d80\n\n/***\n * md5 base64 encoding\n */\nhash(peter, { algorithm: 'md5', encoding: 'base64' });\n// 6rkWaaDiG3NynWw4svGH7g==\nhash(michael, { algorithm: 'md5', encoding: 'base64' });\n// djXaWpuWVJeOF8Sb6SFFNg==\nhash(bob, { algorithm: 'md5', encoding: 'base64' });\n// lFzkw/IJ8/12jZI0rQeS3w==\n```\n\n## Legacy Browser Support\nIE <= 8 and Opera <= 11 support dropped in version 0.3.0.  If you require\nlegacy browser support you must either use an ES5 shim or use version 0.2.5\nof this module.\n\n## Development\n\n```\ngit clone https://github.com/puleos/object-hash\n```\n\n## Node Docker Wrapper\n\nIf you want to stand this up in a docker container, you should take at look\nat the [![node-object-hash](https://github.com/bean5/node-object-hash)](https://github.com/bean5/node-object-hash) project.\n\n### gulp tasks\n* `gulp watch` (default) watch files, test and lint on change/add\n* `gulp test` unit tests\n* `gulp karma` browser unit tests\n* `gulp lint` jshint\n* `gulp dist` create browser version in /dist\n\n## License\nMIT\n\n## Changelog\n\n### v2.0.0\n\nOnly Node.js versions `>= 6.0.0` are being tested in CI now.\nNo other breaking changes were introduced.\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/puleos/object-hash.git"
  },
  "scripts": {
    "prepublish": "gulp dist",
    "test": "node ./node_modules/.bin/mocha test"
  },
  "version": "2.0.3"
}
