{
  "_args": [
    [
      {
        "raw": "yaml@^1.7.2",
        "scope": null,
        "escapedName": "yaml",
        "name": "yaml",
        "rawSpec": "^1.7.2",
        "spec": ">=1.7.2 <2.0.0",
        "type": "range"
      },
      "G:\\projects\\infnews\\node_modules\\babel-plugin-macros\\node_modules\\cosmiconfig"
    ]
  ],
  "_from": "yaml@^1.7.2",
  "_hasShrinkwrap": false,
  "_id": "yaml@1.10.0",
  "_location": "/yaml",
  "_nodeVersion": "13.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/yaml_1.10.0_1589622987762_0.2502280120579963"
  },
  "_npmUser": {
    "name": "eemeli",
    "email": "eemeli@gmail.com"
  },
  "_npmVersion": "6.14.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "yaml@^1.7.2",
    "scope": null,
    "escapedName": "yaml",
    "name": "yaml",
    "rawSpec": "^1.7.2",
    "spec": ">=1.7.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/babel-plugin-macros/cosmiconfig"
  ],
  "_resolved": "https://registry.npmjs.org/yaml/-/yaml-1.10.0.tgz",
  "_shasum": "3b593add944876077d4d683fee01081bd9fff31e",
  "_shrinkwrap": null,
  "_spec": "yaml@^1.7.2",
  "_where": "G:\\projects\\infnews\\node_modules\\babel-plugin-macros\\node_modules\\cosmiconfig",
  "author": {
    "name": "Eemeli Aro",
    "email": "eemeli@gmail.com"
  },
  "browser": {
    "./index.js": "./browser/index.js",
    "./map.js": "./browser/map.js",
    "./pair.js": "./browser/pair.js",
    "./parse-cst.js": "./browser/parse-cst.js",
    "./scalar.js": "./browser/scalar.js",
    "./schema.js": "./browser/schema.js",
    "./seq.js": "./browser/seq.js",
    "./types.js": "./browser/types.js",
    "./types.mjs": "./browser/types.js",
    "./types/binary.js": "./browser/types/binary.js",
    "./types/omap.js": "./browser/types/omap.js",
    "./types/pairs.js": "./browser/types/pairs.js",
    "./types/set.js": "./browser/types/set.js",
    "./types/timestamp.js": "./browser/types/timestamp.js",
    "./util.js": "./browser/util.js",
    "./util.mjs": "./browser/util.js"
  },
  "browserslist": "> 0.5%, not dead",
  "bugs": {
    "url": "https://github.com/eemeli/yaml/issues"
  },
  "dependencies": {},
  "description": "JavaScript parser and stringifier for YAML",
  "devDependencies": {
    "@babel/core": "^7.9.6",
    "@babel/plugin-proposal-class-properties": "^7.8.3",
    "@babel/preset-env": "^7.9.6",
    "@rollup/plugin-babel": "^5.0.0",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^26.0.1",
    "babel-plugin-trace": "^1.1.0",
    "common-tags": "^1.8.0",
    "cross-env": "^7.0.2",
    "eslint": "^7.0.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.3",
    "fast-check": "^1.24.2",
    "jest": "^26.0.1",
    "prettier": "^2.0.5",
    "rollup": "^2.10.2",
    "typescript": "^3.9.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-yr2icI4glYaNG+KWONODapy2/jDdMSDnrONSjblABjD9B4Z5LgiircSt8m8sRZFNi08kG9Sm0uSHtEmP3zaEGg==",
    "shasum": "3b593add944876077d4d683fee01081bd9fff31e",
    "tarball": "https://registry.npmjs.org/yaml/-/yaml-1.10.0.tgz",
    "fileCount": 57,
    "unpackedSize": 444741,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJev7jMCRA9TVsSAnZWagAAteQP/ikhrJdhNfvnOcpL+YBm\ngXzReBGKR14RaQ0LKsokub+jU8kBTpCLIvckXH37/kKfJfAHMKcGkNtIfil5\nGEC7B1etliqM9R6YHKCEJvEigFgdqBWX8DzdFHADRxLEUu/VZ1pfedXzL2RI\n5TFrPWPrhwag3gW6vLSGybf4/+LTiSaEFORMc3zzE+ZmVeNclSdlIO4Lxqg5\nLT08y+6dIP5vx8R5PksPoz79AfGYrNW9UODUlyXg81g6sC5ATlzWjoFt1XaW\n7YlmxiD8VceKf+ntXAfceKCAR5ZBEkh0u2KLLea7pJ+09oI0h9qaOc1xhw+Z\nLMcZtNJM59Fieb6Eesbjn5QdXhkn1FIoiE8Xsdc9Jp0nzZzzrh/oiIeWEysv\nM11x0jHd4/P7XpEQJhk3yxRC/O6RzSbejHjirh7LybyskZhlMSfOOHp4XWYz\nosLIBr+NdGHqRNdnnq6cDYP2JAmssw5C0RSoT3JxAhqG3mRGJDHj2+1l9+6V\nNvGWmgyIZBIW9WToEb6Vp1vaPeFrDT+Tum8aIQc6ehc5yGuEchGr7rApFvDI\nz9bWRWtrekq/mlyErTaPiEXzqJY5xo5Zd/ttMvhPGgUH1/ytSHEVgu9yyQ9g\nyFYM+WOlU0qYAgAyeVYDCbSgyKF23m0u75lsW+BKkqxLuKcSUYZ2miN5nNbH\nEFHT\r\n=5W6u\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 6"
  },
  "exports": {
    ".": "./index.js",
    "./parse-cst": "./parse-cst.js",
    "./types": [
      {
        "import": "./types.mjs"
      },
      "./types.js"
    ],
    "./util": [
      {
        "import": "./util.mjs"
      },
      "./util.js"
    ],
    "./": "./"
  },
  "files": [
    "browser/",
    "dist/",
    "types/",
    "*.d.ts",
    "*.js",
    "*.mjs",
    "!*config.js"
  ],
  "gitHead": "56b873be923015bb367990f04578b6ee9895bf6e",
  "homepage": "https://eemeli.org/yaml/",
  "keywords": [
    "YAML",
    "parser",
    "stringifier"
  ],
  "license": "ISC",
  "main": "./index.js",
  "maintainers": [
    {
      "name": "eemeli",
      "email": "eemeli@gmail.com"
    }
  ],
  "name": "yaml",
  "optionalDependencies": {},
  "prettier": {
    "arrowParens": "avoid",
    "semi": false,
    "singleQuote": true,
    "trailingComma": "none"
  },
  "readme": "# YAML <a href=\"https://www.npmjs.com/package/yaml\"><img align=\"right\" src=\"https://badge.fury.io/js/yaml.svg\" title=\"npm package\" /></a><a href=\"https://travis-ci.org/eemeli/yaml\"><img align=\"right\" src=\"https://travis-ci.org/eemeli/yaml.svg?branch=master\" title=\"Build status\" /></a>\n\n`yaml` is a JavaScript parser and stringifier for [YAML](http://yaml.org/), a human friendly data serialization standard. It supports both parsing and stringifying data using all versions of YAML, along with all common data schemas. As a particularly distinguishing feature, `yaml` fully supports reading and writing comments and blank lines in YAML documents.\n\nThe library is released under the ISC open source license, and the code is [available on GitHub](https://github.com/eemeli/yaml/). It has no external dependencies and runs on Node.js 6 and later, and in browsers from IE 11 upwards.\n\nFor the purposes of versioning, any changes that break any of the endpoints or APIs documented here will be considered semver-major breaking changes. Undocumented library internals may change between minor versions, and previous APIs may be deprecated (but not removed).\n\nFor more information, see the project's documentation site: [**eemeli.org/yaml**](https://eemeli.org/yaml/)\n\nTo install:\n\n```sh\nnpm install yaml\n```\n\nNote: `yaml` 0.x and 1.x are rather different implementations. For the earlier `yaml`, see [tj/js-yaml](https://github.com/tj/js-yaml).\n\n## API Overview\n\nThe API provided by `yaml` has three layers, depending on how deep you need to go: [Parse & Stringify](https://eemeli.org/yaml/#parse-amp-stringify), [Documents](https://eemeli.org/yaml/#documents), and the [CST Parser](https://eemeli.org/yaml/#cst-parser). The first has the simplest API and \"just works\", the second gets you all the bells and whistles supported by the library along with a decent [AST](https://eemeli.org/yaml/#content-nodes), and the third is the closest to YAML source, making it fast, raw, and crude.\n\n```js\nimport YAML from 'yaml'\n// or\nconst YAML = require('yaml')\n```\n\n### Parse & Stringify\n\n- [`YAML.parse(str, options): value`](https://eemeli.org/yaml/#yaml-parse)\n- [`YAML.stringify(value, options): string`](https://eemeli.org/yaml/#yaml-stringify)\n\n### YAML Documents\n\n- [`YAML.createNode(value, wrapScalars, tag): Node`](https://eemeli.org/yaml/#creating-nodes)\n- [`YAML.defaultOptions`](https://eemeli.org/yaml/#options)\n- [`YAML.Document`](https://eemeli.org/yaml/#yaml-documents)\n  - [`constructor(options)`](https://eemeli.org/yaml/#creating-documents)\n  - [`defaults`](https://eemeli.org/yaml/#options)\n  - [`#anchors`](https://eemeli.org/yaml/#working-with-anchors)\n  - [`#contents`](https://eemeli.org/yaml/#content-nodes)\n  - [`#errors`](https://eemeli.org/yaml/#errors)\n- [`YAML.parseAllDocuments(str, options): YAML.Document[]`](https://eemeli.org/yaml/#parsing-documents)\n- [`YAML.parseDocument(str, options): YAML.Document`](https://eemeli.org/yaml/#parsing-documents)\n\n```js\nimport { Pair, YAMLMap, YAMLSeq } from 'yaml/types'\n```\n\n- [`new Pair(key, value)`](https://eemeli.org/yaml/#creating-nodes)\n- [`new YAMLMap()`](https://eemeli.org/yaml/#creating-nodes)\n- [`new YAMLSeq()`](https://eemeli.org/yaml/#creating-nodes)\n\n### CST Parser\n\n```js\nimport parseCST from 'yaml/parse-cst'\n```\n\n- [`parseCST(str): CSTDocument[]`](https://eemeli.org/yaml/#parsecst)\n- [`YAML.parseCST(str): CSTDocument[]`](https://eemeli.org/yaml/#parsecst)\n\n## YAML.parse\n\n```yaml\n# file.yml\nYAML:\n  - A human-readable data serialization language\n  - https://en.wikipedia.org/wiki/YAML\nyaml:\n  - A complete JavaScript implementation\n  - https://www.npmjs.com/package/yaml\n```\n\n```js\nimport fs from 'fs'\nimport YAML from 'yaml'\n\nYAML.parse('3.14159')\n// 3.14159\n\nYAML.parse('[ true, false, maybe, null ]\\n')\n// [ true, false, 'maybe', null ]\n\nconst file = fs.readFileSync('./file.yml', 'utf8')\nYAML.parse(file)\n// { YAML:\n//   [ 'A human-readable data serialization language',\n//     'https://en.wikipedia.org/wiki/YAML' ],\n//   yaml:\n//   [ 'A complete JavaScript implementation',\n//     'https://www.npmjs.com/package/yaml' ] }\n```\n\n## YAML.stringify\n\n```js\nimport YAML from 'yaml'\n\nYAML.stringify(3.14159)\n// '3.14159\\n'\n\nYAML.stringify([true, false, 'maybe', null])\n// `- true\n// - false\n// - maybe\n// - null\n// `\n\nYAML.stringify({ number: 3, plain: 'string', block: 'two\\nlines\\n' })\n// `number: 3\n// plain: string\n// block: >\n//   two\n//\n//   lines\n// `\n```\n\n---\n\nBrowser testing provided by:\n\n<a href=\"https://www.browserstack.com/open-source\">\n<img width=200 src=\"https://eemeli.org/yaml/images/browserstack.svg\" />\n</a>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/eemeli/yaml.git"
  },
  "scripts": {
    "build": "npm run build:node && npm run build:browser",
    "build:browser": "rollup -c rollup.browser-config.js",
    "build:node": "rollup -c rollup.node-config.js",
    "clean": "git clean -fdxe node_modules",
    "docs": "cd docs-slate && bundle exec middleman server",
    "docs:deploy": "cd docs-slate && ./deploy.sh",
    "docs:install": "cd docs-slate && bundle install",
    "lint": "eslint src/",
    "prepublishOnly": "npm run clean && npm test && npm run build",
    "prettier": "prettier --write .",
    "preversion": "npm test && npm run build",
    "start": "cross-env TRACE_LEVEL=log npm run build:node && node -i -e 'YAML=require(\".\")'",
    "test": "jest",
    "test:dist": "npm run build:node && jest",
    "test:types": "tsc --lib ES2017 --noEmit tests/typings.ts"
  },
  "type": "commonjs",
  "version": "1.10.0"
}
